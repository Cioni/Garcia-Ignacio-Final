{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nachi\\\\Desktop\\\\CursoCTD\\\\FrontEnd3\\\\Final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: localStorage.getItem('theme') || \"light\",\n  APIdata: [],\n  favs: JSON.parse(localStorage.getItem('favs')) || []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'light':\n      localStorage.setItem('theme', action.playload);\n      return { ...state,\n        theme: action.payload\n      };\n\n    case 'dark':\n      localStorage.setItem('theme', action.payload);\n      return { ...state,\n        theme: action.payload\n      };\n\n    case 'APIdata':\n      const data = { ...state,\n        data: action.payload\n      };\n      return data;\n\n    case 'addFav':\n      localStorage.setItem('favs', JSON.stringify([...state.favs, action.payload]));\n      return { ...state,\n        favs: [...state.favs, action.payload]\n      };\n\n    case 'removeFav':\n      const newList = state.favs.filter(d => d.id !== action.payload.id);\n      localStorage.setItem('favs', JSON.stringify(newList));\n      return { ...state,\n        favs: newList\n      };\n\n    case 'removeAllFavs':\n      localStorage.setItem('favs', '[]');\n      return { ...state,\n        favs: []\n      };\n\n    default:\n      throw new Error('action type error');\n  }\n};\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const API = 'https://jsonplaceholder.typicode.com/users';\n\n  const getList = async () => {\n    try {\n      const res = await fetch(API);\n\n      if (res.ok) {\n        const data = await res.json();\n        dispatch({\n          type: 'APIdata',\n          payload: data\n        });\n      } else {\n        dispatch({\n          type: 'APIdata',\n          payload: res\n        });\n      }\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    const favsStorage = localStorage.getItem('favs') || \"[]\";\n    localStorage.setItem('favs', favsStorage);\n    getList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","useEffect","initialState","theme","localStorage","getItem","APIdata","favs","JSON","parse","ContextGlobal","reducer","state","action","type","setItem","playload","payload","data","stringify","newList","filter","d","id","Error","ContextProvider","children","dispatch","API","getList","res","fetch","ok","json","error","favsStorage","useContextGlobal"],"sources":["C:/Users/Nachi/Desktop/CursoCTD/FrontEnd3/Final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useReducer, useEffect } from \"react\";\n\nexport const initialState = {\n  theme: localStorage.getItem('theme') || \"light\",\n  APIdata: [],\n  favs: JSON.parse(localStorage.getItem('favs')) || []\n}\n\nexport const ContextGlobal = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type){\n    case 'light':\n      localStorage.setItem('theme', action.playload)\n      return {...state, theme: action.payload}\n\n    case 'dark':\n      localStorage.setItem('theme', action.payload)\n      return {...state, theme: action.payload}\n\n    case 'APIdata':\n      const data = {...state, data: action.payload}\n      return data\n\n    case 'addFav':\n      localStorage.setItem('favs', JSON.stringify([...state.favs, action.payload]))\n      return {...state, favs: [...state.favs, action.payload]}\n\n    case 'removeFav':\n      const newList = state.favs.filter(d => d.id !== action.payload.id)\n      localStorage.setItem('favs', JSON.stringify(newList))\n      return {...state, favs: newList}\n\n    case 'removeAllFavs':\n      localStorage.setItem('favs', '[]')\n      return {...state, favs: []}\n    default: \n      throw new Error('action type error')\n  }\n}\n\nconst ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const API = 'https://jsonplaceholder.typicode.com/users'\n\n  const getList = async() => {\n    try {\n      const res = await fetch(API)\n      if(res.ok){\n        const data = await res.json()\n        dispatch({type: 'APIdata', payload: data})\n      }else{\n        dispatch({type: 'APIdata', payload: res})\n      }\n    } catch (error) {  }\n  }\n\n  useEffect(() => {\n    const favsStorage = localStorage.getItem('favs') || \"[]\"\n    localStorage.setItem('favs', favsStorage)\n    getList()\n  }, [])\n\n  return (\n    <ContextGlobal.Provider value={{state, dispatch}}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n\nexport default ContextProvider\n\nexport const useContextGlobal = () => useContext(ContextGlobal)"],"mappings":"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"},"metadata":{},"sourceType":"module"}